{"ast":null,"code":"import { supabase } from './supabase';\nconst roleEmails = {\n  INWARD_CLERK: process.env.REACT_APP_INWARD_CLERK_EMAILS,\n  QUALITY_CHECKER: process.env.REACT_APP_QUALITY_CHECKER_EMAILS,\n  APPROVER: process.env.REACT_APP_APPROVER_EMAILS,\n  SUPERADMIN: process.env.REACT_APP_SUPERADMIN_EMAILS\n};\nexport async function login(email, password) {\n  return supabase.auth.signInWithPassword({\n    email,\n    password\n  });\n}\nexport async function logout() {\n  return supabase.auth.signOut();\n}\nexport function getCurrentUser() {\n  return supabase.auth.getUser();\n}\nexport function getUserRole(email) {\n  for (const [role, roleEmail] of Object.entries(roleEmails)) {\n    if (roleEmail && email.toLowerCase() === roleEmail.toLowerCase()) {\n      return role;\n    }\n  }\n  return null;\n}","map":{"version":3,"names":["supabase","roleEmails","INWARD_CLERK","process","env","REACT_APP_INWARD_CLERK_EMAILS","QUALITY_CHECKER","REACT_APP_QUALITY_CHECKER_EMAILS","APPROVER","REACT_APP_APPROVER_EMAILS","SUPERADMIN","REACT_APP_SUPERADMIN_EMAILS","login","email","password","auth","signInWithPassword","logout","signOut","getCurrentUser","getUser","getUserRole","role","roleEmail","Object","entries","toLowerCase"],"sources":["/Users/samaysalunke/Documents/everything-hobby/kwabey-fab-check/src/services/auth.service.ts"],"sourcesContent":["import { supabase } from './supabase';\n\nconst roleEmails = {\n  INWARD_CLERK: process.env.REACT_APP_INWARD_CLERK_EMAILS,\n  QUALITY_CHECKER: process.env.REACT_APP_QUALITY_CHECKER_EMAILS,\n  APPROVER: process.env.REACT_APP_APPROVER_EMAILS,\n  SUPERADMIN: process.env.REACT_APP_SUPERADMIN_EMAILS,\n};\n\nexport async function login(email: string, password: string) {\n  return supabase.auth.signInWithPassword({ email, password });\n}\n\nexport async function logout() {\n  return supabase.auth.signOut();\n}\n\nexport function getCurrentUser() {\n  return supabase.auth.getUser();\n}\n\nexport function getUserRole(email: string): string | null {\n  for (const [role, roleEmail] of Object.entries(roleEmails)) {\n    if (roleEmail && email.toLowerCase() === roleEmail.toLowerCase()) {\n      return role;\n    }\n  }\n  return null;\n} "],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AAErC,MAAMC,UAAU,GAAG;EACjBC,YAAY,EAAEC,OAAO,CAACC,GAAG,CAACC,6BAA6B;EACvDC,eAAe,EAAEH,OAAO,CAACC,GAAG,CAACG,gCAAgC;EAC7DC,QAAQ,EAAEL,OAAO,CAACC,GAAG,CAACK,yBAAyB;EAC/CC,UAAU,EAAEP,OAAO,CAACC,GAAG,CAACO;AAC1B,CAAC;AAED,OAAO,eAAeC,KAAKA,CAACC,KAAa,EAAEC,QAAgB,EAAE;EAC3D,OAAOd,QAAQ,CAACe,IAAI,CAACC,kBAAkB,CAAC;IAAEH,KAAK;IAAEC;EAAS,CAAC,CAAC;AAC9D;AAEA,OAAO,eAAeG,MAAMA,CAAA,EAAG;EAC7B,OAAOjB,QAAQ,CAACe,IAAI,CAACG,OAAO,CAAC,CAAC;AAChC;AAEA,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC/B,OAAOnB,QAAQ,CAACe,IAAI,CAACK,OAAO,CAAC,CAAC;AAChC;AAEA,OAAO,SAASC,WAAWA,CAACR,KAAa,EAAiB;EACxD,KAAK,MAAM,CAACS,IAAI,EAAEC,SAAS,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACxB,UAAU,CAAC,EAAE;IAC1D,IAAIsB,SAAS,IAAIV,KAAK,CAACa,WAAW,CAAC,CAAC,KAAKH,SAAS,CAACG,WAAW,CAAC,CAAC,EAAE;MAChE,OAAOJ,IAAI;IACb;EACF;EACA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}