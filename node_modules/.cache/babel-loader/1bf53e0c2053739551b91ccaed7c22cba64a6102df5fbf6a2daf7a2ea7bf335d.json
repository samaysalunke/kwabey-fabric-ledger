{"ast":null,"code":"import { supabase } from './supabase';\nexport async function getEntriesReadyForApproval() {\n  // Entries with quality parameters completed and not yet approved\n  return supabase.from('fabric_entries').select('*').eq('status', 'READY_TO_ISSUE');\n}\nexport async function approveEntry(fabric_entry_id) {\n  return supabase.from('quantity_approvals').insert([{\n    fabric_entry_id,\n    approval_status: 'APPROVED'\n  }]);\n}\nexport async function holdEntry(fabric_entry_id, reason, details) {\n  return supabase.from('quantity_approvals').insert([{\n    fabric_entry_id,\n    approval_status: 'ON_HOLD',\n    hold_reason: reason,\n    ...details\n  }]);\n}\nexport async function updateApprovalStatus(id, status) {\n  return supabase.from('quantity_approvals').update({\n    approval_status: status\n  }).eq('id', id);\n}","map":{"version":3,"names":["supabase","getEntriesReadyForApproval","from","select","eq","approveEntry","fabric_entry_id","insert","approval_status","holdEntry","reason","details","hold_reason","updateApprovalStatus","id","status","update"],"sources":["/Users/samaysalunke/Documents/everything-hobby/kwabey-fab-check/src/services/approval.service.ts"],"sourcesContent":["import { supabase } from './supabase';\nimport { QuantityApproval, HoldReason, ApprovalStatus } from '../utils/types';\n\nexport async function getEntriesReadyForApproval() {\n  // Entries with quality parameters completed and not yet approved\n  return supabase\n    .from('fabric_entries')\n    .select('*')\n    .eq('status', 'READY_TO_ISSUE');\n}\n\nexport async function approveEntry(fabric_entry_id: string) {\n  return supabase.from('quantity_approvals').insert([\n    { fabric_entry_id, approval_status: 'APPROVED' },\n  ]);\n}\n\nexport async function holdEntry(fabric_entry_id: string, reason: HoldReason, details?: Partial<QuantityApproval>) {\n  return supabase.from('quantity_approvals').insert([\n    { fabric_entry_id, approval_status: 'ON_HOLD', hold_reason: reason, ...details },\n  ]);\n}\n\nexport async function updateApprovalStatus(id: string, status: ApprovalStatus) {\n  return supabase.from('quantity_approvals').update({ approval_status: status }).eq('id', id);\n} "],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AAGrC,OAAO,eAAeC,0BAA0BA,CAAA,EAAG;EACjD;EACA,OAAOD,QAAQ,CACZE,IAAI,CAAC,gBAAgB,CAAC,CACtBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,QAAQ,EAAE,gBAAgB,CAAC;AACnC;AAEA,OAAO,eAAeC,YAAYA,CAACC,eAAuB,EAAE;EAC1D,OAAON,QAAQ,CAACE,IAAI,CAAC,oBAAoB,CAAC,CAACK,MAAM,CAAC,CAChD;IAAED,eAAe;IAAEE,eAAe,EAAE;EAAW,CAAC,CACjD,CAAC;AACJ;AAEA,OAAO,eAAeC,SAASA,CAACH,eAAuB,EAAEI,MAAkB,EAAEC,OAAmC,EAAE;EAChH,OAAOX,QAAQ,CAACE,IAAI,CAAC,oBAAoB,CAAC,CAACK,MAAM,CAAC,CAChD;IAAED,eAAe;IAAEE,eAAe,EAAE,SAAS;IAAEI,WAAW,EAAEF,MAAM;IAAE,GAAGC;EAAQ,CAAC,CACjF,CAAC;AACJ;AAEA,OAAO,eAAeE,oBAAoBA,CAACC,EAAU,EAAEC,MAAsB,EAAE;EAC7E,OAAOf,QAAQ,CAACE,IAAI,CAAC,oBAAoB,CAAC,CAACc,MAAM,CAAC;IAAER,eAAe,EAAEO;EAAO,CAAC,CAAC,CAACX,EAAE,CAAC,IAAI,EAAEU,EAAE,CAAC;AAC7F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}