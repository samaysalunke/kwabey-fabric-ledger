{"ast":null,"code":"import _objectSpread from\"/Users/samaysalunke/Documents/everything-hobby/kwabey-fab-check/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AppContext=/*#__PURE__*/createContext(undefined);export function AppProvider(_ref){let{children}=_ref;const[notifications,setNotifications]=useState([]);const[globalLoading,setGlobalLoading]=useState(false);const addNotification=notification=>{const id=Math.random().toString(36).substr(2,9);const newNotification=_objectSpread(_objectSpread({},notification),{},{id});setNotifications(prev=>[...prev,newNotification]);// Auto-remove notification after duration (default 5 seconds)\nconst duration=notification.duration||5000;setTimeout(()=>{removeNotification(id);},duration);};const removeNotification=id=>{setNotifications(prev=>prev.filter(notification=>notification.id!==id));};const value={notifications,addNotification,removeNotification,globalLoading,setGlobalLoading};return/*#__PURE__*/_jsx(AppContext.Provider,{value:value,children:children});}export function useApp(){const context=useContext(AppContext);if(context===undefined){throw new Error('useApp must be used within an AppProvider');}return context;}export{AppContext};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","AppContext","undefined","AppProvider","_ref","children","notifications","setNotifications","globalLoading","setGlobalLoading","addNotification","notification","id","Math","random","toString","substr","newNotification","_objectSpread","prev","duration","setTimeout","removeNotification","filter","value","Provider","useApp","context","Error"],"sources":["/Users/samaysalunke/Documents/everything-hobby/kwabey-fab-check/src/contexts/AppContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\n\ninterface Notification {\n  id: string;\n  type: 'success' | 'error' | 'warning' | 'info';\n  message: string;\n  duration?: number;\n}\n\ninterface AppContextType {\n  notifications: Notification[];\n  addNotification: (notification: Omit<Notification, 'id'>) => void;\n  removeNotification: (id: string) => void;\n  globalLoading: boolean;\n  setGlobalLoading: (loading: boolean) => void;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\ninterface AppProviderProps {\n  children: ReactNode;\n}\n\nexport function AppProvider({ children }: AppProviderProps) {\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [globalLoading, setGlobalLoading] = useState(false);\n\n  const addNotification = (notification: Omit<Notification, 'id'>) => {\n    const id = Math.random().toString(36).substr(2, 9);\n    const newNotification = { ...notification, id };\n    \n    setNotifications(prev => [...prev, newNotification]);\n\n    // Auto-remove notification after duration (default 5 seconds)\n    const duration = notification.duration || 5000;\n    setTimeout(() => {\n      removeNotification(id);\n    }, duration);\n  };\n\n  const removeNotification = (id: string) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n\n  const value = {\n    notifications,\n    addNotification,\n    removeNotification,\n    globalLoading,\n    setGlobalLoading,\n  };\n\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n}\n\nexport function useApp() {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n}\n\nexport { AppContext };"],"mappings":"oJAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAiB9E,KAAM,CAAAC,UAAU,cAAGL,aAAa,CAA6BM,SAAS,CAAC,CAMvE,MAAO,SAAS,CAAAC,WAAWA,CAAAC,IAAA,CAAiC,IAAhC,CAAEC,QAA2B,CAAC,CAAAD,IAAA,CACxD,KAAM,CAACE,aAAa,CAAEC,gBAAgB,CAAC,CAAGT,QAAQ,CAAiB,EAAE,CAAC,CACtE,KAAM,CAACU,aAAa,CAAEC,gBAAgB,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAEzD,KAAM,CAAAY,eAAe,CAAIC,YAAsC,EAAK,CAClE,KAAM,CAAAC,EAAE,CAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAClD,KAAM,CAAAC,eAAe,CAAAC,aAAA,CAAAA,aAAA,IAAQP,YAAY,MAAEC,EAAE,EAAE,CAE/CL,gBAAgB,CAACY,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEF,eAAe,CAAC,CAAC,CAEpD;AACA,KAAM,CAAAG,QAAQ,CAAGT,YAAY,CAACS,QAAQ,EAAI,IAAI,CAC9CC,UAAU,CAAC,IAAM,CACfC,kBAAkB,CAACV,EAAE,CAAC,CACxB,CAAC,CAAEQ,QAAQ,CAAC,CACd,CAAC,CAED,KAAM,CAAAE,kBAAkB,CAAIV,EAAU,EAAK,CACzCL,gBAAgB,CAACY,IAAI,EAAIA,IAAI,CAACI,MAAM,CAACZ,YAAY,EAAIA,YAAY,CAACC,EAAE,GAAKA,EAAE,CAAC,CAAC,CAC/E,CAAC,CAED,KAAM,CAAAY,KAAK,CAAG,CACZlB,aAAa,CACbI,eAAe,CACfY,kBAAkB,CAClBd,aAAa,CACbC,gBACF,CAAC,CAED,mBAAOT,IAAA,CAACC,UAAU,CAACwB,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAnB,QAAA,CAAEA,QAAQ,CAAsB,CAAC,CAC5E,CAEA,MAAO,SAAS,CAAAqB,MAAMA,CAAA,CAAG,CACvB,KAAM,CAAAC,OAAO,CAAG9B,UAAU,CAACI,UAAU,CAAC,CACtC,GAAI0B,OAAO,GAAKzB,SAAS,CAAE,CACzB,KAAM,IAAI,CAAA0B,KAAK,CAAC,2CAA2C,CAAC,CAC9D,CACA,MAAO,CAAAD,OAAO,CAChB,CAEA,OAAS1B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}