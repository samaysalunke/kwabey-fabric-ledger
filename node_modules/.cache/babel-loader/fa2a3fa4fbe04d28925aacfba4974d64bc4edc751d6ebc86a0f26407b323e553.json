{"ast":null,"code":"import * as yup from 'yup';\nimport { QUANTITY_UNITS, FABRIC_TYPES, UAT_UNITS, ROLL_UNITS, COLOR_FASTNESS, APPROVAL_STATUS, HOLD_REASONS } from './constants';\nexport const fabricEntrySchema = yup.object().shape({\n  seller_name: yup.string().required('Seller name is required'),\n  quantity_value: yup.number().required('Quantity is required').positive(),\n  quantity_unit: yup.string().oneOf([...QUANTITY_UNITS]).required(),\n  color: yup.string().required('Color is required'),\n  fabric_type: yup.string().oneOf([...FABRIC_TYPES]).required(),\n  po_number: yup.string().required('PO Number is required'),\n  fabric_composition: yup.string().required('Fabric composition is required'),\n  inwarded_by: yup.string().required('Inwarded by is required'),\n  uat_value: yup.number().required('UAT value is required').positive(),\n  uat_unit: yup.string().oneOf([...UAT_UNITS]).required()\n});\nexport const rollSchema = yup.object().shape({\n  roll_value: yup.number().required('Roll value is required').positive(),\n  roll_unit: yup.string().oneOf([...ROLL_UNITS]).required()\n});\nexport const ribDetailsSchema = yup.object().shape({\n  total_weight: yup.number().nullable().positive(),\n  total_rolls: yup.number().nullable().integer().positive()\n});\nexport const qualityParamsSchema = yup.object().shape({\n  gsm_value: yup.number().required('GSM is required').positive(),\n  width_dia_inches: yup.number().required('Width/DIA is required').positive(),\n  shrinkage_percent: yup.number().required('Shrinkage % is required').min(0).max(100),\n  color_fastness: yup.string().oneOf([...COLOR_FASTNESS]).required(),\n  remarks: yup.string().optional()\n});\nexport const approvalSchema = yup.object().shape({\n  approval_status: yup.string().oneOf([...APPROVAL_STATUS]).required(),\n  hold_reason: yup.string().oneOf([...HOLD_REASONS]).nullable(),\n  not_approved_quantity: yup.number().nullable().min(0)\n});","map":{"version":3,"names":["yup","QUANTITY_UNITS","FABRIC_TYPES","UAT_UNITS","ROLL_UNITS","COLOR_FASTNESS","APPROVAL_STATUS","HOLD_REASONS","fabricEntrySchema","object","shape","seller_name","string","required","quantity_value","number","positive","quantity_unit","oneOf","color","fabric_type","po_number","fabric_composition","inwarded_by","uat_value","uat_unit","rollSchema","roll_value","roll_unit","ribDetailsSchema","total_weight","nullable","total_rolls","integer","qualityParamsSchema","gsm_value","width_dia_inches","shrinkage_percent","min","max","color_fastness","remarks","optional","approvalSchema","approval_status","hold_reason","not_approved_quantity"],"sources":["/Users/samaysalunke/Documents/everything-hobby/kwabey-fab-check/src/utils/validation.ts"],"sourcesContent":["import * as yup from 'yup';\nimport { QUANTITY_UNITS, FABRIC_TYPES, UAT_UNITS, ROLL_UNITS, COLOR_FASTNESS, APPROVAL_STATUS, HOLD_REASONS } from './constants';\n\nexport const fabricEntrySchema = yup.object().shape({\n  seller_name: yup.string().required('Seller name is required'),\n  quantity_value: yup.number().required('Quantity is required').positive(),\n  quantity_unit: yup.string().oneOf([...QUANTITY_UNITS]).required(),\n  color: yup.string().required('Color is required'),\n  fabric_type: yup.string().oneOf([...FABRIC_TYPES]).required(),\n  po_number: yup.string().required('PO Number is required'),\n  fabric_composition: yup.string().required('Fabric composition is required'),\n  inwarded_by: yup.string().required('Inwarded by is required'),\n  uat_value: yup.number().required('UAT value is required').positive(),\n  uat_unit: yup.string().oneOf([...UAT_UNITS]).required(),\n});\n\nexport const rollSchema = yup.object().shape({\n  roll_value: yup.number().required('Roll value is required').positive(),\n  roll_unit: yup.string().oneOf([...ROLL_UNITS]).required(),\n});\n\nexport const ribDetailsSchema = yup.object().shape({\n  total_weight: yup.number().nullable().positive(),\n  total_rolls: yup.number().nullable().integer().positive(),\n});\n\nexport const qualityParamsSchema = yup.object().shape({\n  gsm_value: yup.number().required('GSM is required').positive(),\n  width_dia_inches: yup.number().required('Width/DIA is required').positive(),\n  shrinkage_percent: yup.number().required('Shrinkage % is required').min(0).max(100),\n  color_fastness: yup.string().oneOf([...COLOR_FASTNESS]).required(),\n  remarks: yup.string().optional(),\n});\n\nexport const approvalSchema = yup.object().shape({\n  approval_status: yup.string().oneOf([...APPROVAL_STATUS]).required(),\n  hold_reason: yup.string().oneOf([...HOLD_REASONS]).nullable(),\n  not_approved_quantity: yup.number().nullable().min(0),\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}